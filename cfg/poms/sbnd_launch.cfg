[global]
group      = sbnd
experiment = sbnd
wrapper = file:///${FIFE_UTILS_DIR}/libexec/fife_wrap
version = v_override_me
quals   = override_me
fclfile = prodsingle_mu_100-1257MeV_fixposcontained_fixangle.fcl
mdprojectname = prodsingle_mu_100-1257MeV_fixposcontained_fixangle
mdprojectstage = override_me
basename= stage_override
baseoutdir=/pnfs/sbnd/scratch/sbndpro/dbrailsf_poms_test/test_full_flow
sam_dataset = override_me
streamname = only
[env_pass]
#IFDH_DEBUG = 1
SAM_EXPERIMENT=%(experiment)s
SAM_GROUP=%(group)s
SAM_STATION=%(experiment)s
[submit]
G          = %(group)s
N          = 5
#dataset     =
resource-provides      = usage_model=OPPORTUNISTIC,DEDICATED,OFFSITE
generate-email-summary = True
expected-lifetime      = 3h
timeout                      = 2h
OS                     = sl6
#disk                  = 10GB
memory                 = 2000MB
f_1                    = /pnfs/sbnd/scratch/sbndpro/dbrailsf_poms_test/prescripts/sbndpoms_wrapperfcl_maker.sh
f_2                    = /pnfs/sbnd/scratch/sbndpro/dbrailsf_poms_test/prescripts/sbndpoms_metadata_injector.sh
f_3                    = /pnfs/sbnd/scratch/sbndpro/dbrailsf_poms_test/prescripts/sbndpoms_runnumber_injector.sh
f_4                    = /pnfs/sbnd/scratch/sbndpro/dbrailsf_poms_test/metadata_extractor/sbndpoms_metadata_extractor.sh

[job_setup]
debug       = False
find_setups = True
source_1    = /cvmfs/%(experiment)s.opensciencegrid.org/products/%(experiment)s/setup_%(experiment)s.sh
setup_1     = %(experiment)scode %(version)s -q %(quals)s
prescript_1 = /bin/bash ${CONDOR_DIR_INPUT}/sbndpoms_wrapperfcl_maker.sh --fclname %(fclfile)s --wrappername wrapper.fcl
prescript_2 = /bin/bash ${CONDOR_DIR_INPUT}/sbndpoms_metadata_injector.sh --inputfclname wrapper.fcl --mdfclname %(fclfile)s --mdprojectname %(mdprojectname)s --mdprojectstage %(mdprojectstage)s --mdprojectversion %(version)s --mdprojectsoftware sbndcode --mdproductionname 0.0 --mdproductiontype test --mdappversion %(version)s --mdfiletype mc --mdappfamily art --mdruntype physics
prescript_3 = /bin/bash ${CONDOR_DIR_INPUT}/sbndpoms_runnumber_injector.sh --fcl wrapper.fcl 
prescript_4 = chmod +x ${CONDOR_DIR_INPUT}/sbndpoms_metadata_extractor.sh
prescript_5 = cat wrapper.fcl
postscript_1 = ${CONDOR_DIR_INPUT}/sbndpoms_metadata_extractor.sh %(basename)s.root
postscript_2 = samweb -e sbnd validate-metadata %(basename)s.root.json
#multifile   = True
#getconfig   = False
#ifdh_art    = False
[sam_consumer]
limit       = 1
appvers        = %(version)s
schema      = gsiftp
[executable]
name       = lar
arg_1      = -c
arg_2      = wrapper.fcl
arg_3      = -o
arg_4      = %(basename)s.root
arg_5      = -T 
arg_6      = hist_%(basename)s.root
arg_7      = -s 
#arg_8      = input_filename -- will be added by multifile loop...
[job_output]
addoutput   = %(basename)s.root
rename      = unique
dest        = %(baseoutdir)s
declare_metadata = True
metadata_extractor=${CONDOR_DIR_INPUT}/sbndpoms_metadata_extractor.sh
add_location=True          
[stage_gen]
# fake output dataset for POMS
job_output.add_to_dataset  = _poms_task
job_output.dataset_exclude = hist*
# turn off -s flag
executable.arg_7           = 
global.basename            = gen
global.mdprojectstage      = gen
job_setup.multifile        = False
job_output.dest            = %(baseoutdir)s/gen
#global.fclfile        = standard_detsim_%(experiment)s.fcl
[stage_g4]
global.basename       = g4
global.mdprojectstage = g4
#submit.dataset        = %(sam_dataset)s
job_output.dest       = %(baseoutdir)s/g4
# # if g4 only works onsite 
# submit.resource-provides= usage_model=OPPORTUNISTIC,DEDICATED
#
# # ...with extra cvmfs libraries:
# job_setup.prescript     = export LD_LIBRARY_PATH=/cvmfs/nova.opensciencegrid.org/externals/library_shim/v03.03/NULL/lib/sl6:$LD_LIBRARY_PATH
[stage_detsim]
global.basename       = detsim
global.mdprojectstage = detsim
global.fclfile        = standard_detsim_%(experiment)s.fcl
submit.dataset        = %(sam_dataset)s
job_output.dest       = %(baseoutdir)s/detsim
[stage_reco]
global.basename       = reco
global.mdprojectstage = reco
global.fclfile        = standard_reco_%(experiment)s_basic.fcl
submit.dataset        = %(sam_dataset)s
job_output.dest       = %(baseoutdir)s/reco
[stage_anatree]
global.basename       = anatree
global.mdprojectstage = anatree
global.fclfile        = standard_anatree_%(experiment)s.fcl
submit.dataset        = %(sam_dataset)s
job_output.dest       = %(baseoutdir)s/anatree

[stage_split]
global.basename = split
arg_3           =
arg_4           =
global.fclfile  = standard_streamsplit_%(experiment)s.fcl
submit.dataset  = %(sam_dataset)s
[stage_merge]
global.basename = merge_%(streamname)s
global.fclfile  = standard_merge_%(experiment)s.fcl
submit.dataset  = %(sam_dataset)s
